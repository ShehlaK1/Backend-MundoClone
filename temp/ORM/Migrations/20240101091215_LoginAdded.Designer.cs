// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ORM.DatabaseContext;

#nullable disable

namespace ORM.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240101091215_LoginAdded")]
    partial class LoginAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Common.Model.Assessment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("text");

                    b.Property<int>("AssessmentNumber")
                        .HasColumnType("integer");

                    b.Property<string>("AssessmentTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<int>("PassingScore")
                        .HasColumnType("integer");

                    b.Property<string>("TargetSkillId")
                        .IsRequired()
                        .HasColumnType("CHAR(36)");

                    b.Property<int>("TotalScore")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TargetSkillId");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("Common.Model.CompositeLevel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CompositeLevels");
                });

            modelBuilder.Entity("Common.Model.Grade", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("Common.Model.Lesson", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Frequency")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Objective")
                        .HasColumnType("text");

                    b.Property<string>("PlanningInstructions")
                        .HasColumnType("text");

                    b.Property<string>("TargetSkillId")
                        .IsRequired()
                        .HasColumnType("CHAR(36)");

                    b.Property<TimeOnly>("TimeToSpend")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.HasIndex("TargetSkillId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("Common.Model.TargetSkill", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TargetSkills");
                });

            modelBuilder.Entity("Common.Model.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HomePhone")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NickName")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Common.Model.Year", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Years");
                });

            modelBuilder.Entity("Common.Model.Assessment", b =>
                {
                    b.HasOne("Common.Model.TargetSkill", "TargetSkill")
                        .WithMany()
                        .HasForeignKey("TargetSkillId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TargetSkill");
                });

            modelBuilder.Entity("Common.Model.Lesson", b =>
                {
                    b.HasOne("Common.Model.TargetSkill", "TargetSkill")
                        .WithMany()
                        .HasForeignKey("TargetSkillId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TargetSkill");
                });
#pragma warning restore 612, 618
        }
    }
}
